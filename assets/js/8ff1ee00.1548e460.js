"use strict";(self.webpackChunkdoris_website=self.webpackChunkdoris_website||[]).push([[616184],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>m});var o=n(296540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),g=r,m=d["".concat(c,".").concat(g)]||d[g]||u[g]||a;return n?o.createElement(m,i(i({ref:t},p),{},{components:n})):o.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=g;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},908518:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var o=n(58168),r=(n(296540),n(15680));const a={title:"Config and install Recycler",language:"en"},i=void 0,l={unversionedId:"install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-metaservice/config-recycler",id:"version-3.0/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-metaservice/config-recycler",title:"Config and install Recycler",description:"\x3c!--",source:"@site/versioned_docs/version-3.0/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-metaservice/config-recycler.md",sourceDirName:"install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-metaservice",slug:"/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-metaservice/config-recycler",permalink:"/docs/3.0/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-metaservice/config-recycler",draft:!1,tags:[],version:"3.0",frontMatter:{title:"Config and install Recycler",language:"en"},sidebar:"docs",previous:{title:"Config and install MS",permalink:"/docs/3.0/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-metaservice/config-ms"},next:{title:"Cluster dependency association configuration",permalink:"/docs/3.0/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-cluster/config-relation"}},c={},s=[{value:"Configure resources",id:"configure-resources",level:2},{value:"Customized configuration file",id:"customized-configuration-file",level:2}],p={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.yg)(d,(0,o.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Recyler is a Doris Compute-storage decoupled component that cleans up expired metadata. The configuration field in ",(0,r.yg)("inlineCode",{parentName:"p"},"DorisDisaggregatedMetaService")," is recyler."),(0,r.yg)("p",null,"The Recyler service is a stateless service and is usually deployed in active-standby mode. The simplest configuration is as follows:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  recycler:\n    image: {recylerImage}\n    replicas: 2\n")),(0,r.yg)("p",null,"Among them, ",(0,r.yg)("inlineCode",{parentName:"p"},"{recylerImage}")," is the image for deploying the Recyler service. Recyler and MS are different ways to start the same program of the metadata management service. Recycler does not have a separate image name, please fill in the image of MS."),(0,r.yg)("p",null,"Update the modified configuration to the ","[Compute-storage decoupled metadata management resource]","(/docs/3.0/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-quickstart#Install DorisDisaggregatedMetaService) that needs to be deployed."),(0,r.yg)("h2",{id:"configure-resources"},"Configure resources"),(0,r.yg)("p",null,"Add resource usage restrictions to the Recycler service. Take the 4c 4Gi configuration as an example:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  recyler:\n    requests:\n      cpu: 4\n      memory: 4Gi\n    limits:\n      cpu: 4\n      memory: 4Gi\n")),(0,r.yg)("p",null,"Update the modified configuration to the ","[Compute-storage decoupled metadata management resource]","(/docs/3.0/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-quickstart#Install DorisDisaggregatedMetaService) that needs to be deployed."),(0,r.yg)("h2",{id:"customized-configuration-file"},"Customized configuration file"),(0,r.yg)("p",null,"ConfigMap is used to mount the configuration file on K8s. Doris-Operator automates the configuration of mutual perception between Compute-storage decoupled components. When deploying MS services using customized configuration files, please do not configure ",(0,r.yg)("a",{parentName:"p",href:"../../../../../compute-storage-decoupled/compilation-and-deployment#deploy-meta-service"},"FDB related configuration"),"."),(0,r.yg)("p",null,"Use ConfigMap to mount the configuration file to deploy the Recycler service:"),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"ConfigMap"),":"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: v1\ndata:\n  doris_cloud.conf: |\n    brpc_listen_port = 5000\n    brpc_num_threads = -1\n    brpc_idle_timeout_sec = 30\n    http_token = greedisgood9999\n\n    # // doris txn config\n    label_keep_max_second = 259200\n    expired_txn_scan_key_nums = 1000\n\n    # // logging\n    log_dir = ./log/\n    # info warn error\n    log_level = info\n    log_size_mb = 1024\n    log_filenum_quota = 10\n    log_immediate_flush = false\n    # log_verbose_modules = *\n    # // recycler config\n    recycle_interval_seconds = 3600\n    retention_seconds = 259200\n    recycle_concurrency = 16\nkind: ConfigMap\nmetadata:\n  name: doris-metaservice\n")),(0,r.yg)("p",null,"The Recycler configuration using the above ConfigMap is as follows:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml"},"spec:\n  recyler:\n    image: {recylerImage}\n    configMaps:\n    - name: doris-metaservice\n      mountPath: /etc/doris\n")),(0,r.yg)("p",null,"In actual deployment, configure the name and namespace of ConfigMap as needed, and configure the configuration information in the ","[Compute-storage decoupled Metadata Management Resource]","(/docs/3.0/install/cluster-deployment/k8s-deploy/compute-storage-decoupled/install-quickstart#Install DorisDisaggregatedMetaService) to be deployed according to the above sample format. The startup configuration file used by the Recycler service is named ",(0,r.yg)("inlineCode",{parentName:"p"},"doris_cloud.conf"),", so the key of the ConfigMap for mounting the startup configuration must also be ",(0,r.yg)("inlineCode",{parentName:"p"},"doris_cloud.conf"),". The startup configuration must be mounted to the ",(0,r.yg)("inlineCode",{parentName:"p"},"/etc/doris")," directory, that is, the mountPath is ",(0,r.yg)("inlineCode",{parentName:"p"},"/etc/doris"),"."),(0,r.yg)("admonition",{title:"Tip",type:"tip"},(0,r.yg)("p",{parentName:"admonition"},"The Recyler service needs to use FDB as the backend metadata storage. The FDB service must be deployed when deploying the Recyler service.")))}u.isMDXComponent=!0}}]);